# Methane Kit CI configuration for MacOS platform
# https://aka.ms/yaml

parameters:
  - name: runTests
    type: boolean
    default: true
  - name: extraInitSteps
    type: stepList
    default: [ ]

steps:

  - script: |
      if [ -d $(buildDir) ]; then
        echo Build directory '$(buildDir)' already exists, removing all contents...
        rmdir -rf $(buildDir)
      fi
      mkdir -p $(buildDir)
    displayName: 'Make build directories for $(platform) $(configuration)'

  - ${{ each step in parameters.extraInitSteps }}:
      - ${{ step }}

  - task: CMake@1
    displayName: 'Generate with $(generatorName) for $(platform) $(configuration)'
    inputs:
      workingDirectory: $(buildDir)
      cmakeArgs: '-G $(generatorName) -DCMAKE_BUILD_TYPE=$(configuration) -DCMAKE_INSTALL_PREFIX:PATH=$(buildInstallDir) $(cmakeFlags) $(rootDir)'

  - task: CMake@1
    displayName: 'Build with $(generatorName) for $(platform) $(configuration)'
    inputs:
      workingDirectory: $(buildDir)
      cmakeArgs: '--build . --config $(configuration) --target install'

  - bash: |
      result_ext='_result.xml'
      echo Running unit-tests in directory $PWD
      for test_exe in *Test
      do
        ./$test_exe -r junit -o "$test_exe$result_ext"
        echo  - $test_exe - completed with $? exit status
      done
    workingDirectory: '$(installDir)/Tests'
    enabled: ${{ parameters.runTests }}
    displayName: 'Run all unit-tests from install directory'

  - script: |
      cp $(rootDir)/README.md README.md
      echo Methane Kit v. $(product.Version.Full), git branch: $(Build.SourceBranchName), commit id: $(Build.SourceVersion) >Build.txt
    workingDirectory: '$(installDir)'
    displayName: 'Copy ReadMe and write build information'

  - task: CopyFiles@2
    displayName: 'Copy install artifacts for $(platform) $(configuration)'
    inputs:
      SourceFolder: $(installDir)
      Contents: '**/*'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishTestResults@2
    enabled: ${{ parameters.runTests }}
    continueOnError: true
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles:  '**/*_result.xml'
      searchFolder: '$(Build.ArtifactStagingDirectory)/Tests'
      mergeTestResults: true
      failTaskOnFailedTests: true
      buildPlatform: $(platform)
      buildConfiguration: $(configuration)
      testRunTitle: 'Methane Tests $(platform) $(configuration)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish install artifacts for $(platform) $(configuration)'
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: MethaneKit-$(buildName)_v$(product.Version.Full)