# Methane Kit CI configuration for Sonar Cloud static code analysis on MacOS/Linux platform
# https://aka.ms/yaml

parameters:
  - name: extraInitSteps
    type: stepList
    default: [ ]
  - name: extraScanSteps
    type: stepList
    default: []

steps:
  - ${{ each step in parameters.extraInitSteps }}:
    - ${{ step }}

  - task: CMake@1
    displayName: 'Generate with configuration preset $(cmake.ConfigurePreset)'
    inputs:
      workingDirectory: $(Build.SourcesDirectory)
      cmakeArgs: '--preset $(cmake.ConfigurePreset) $(cmake.ConfigureFlags)'

  - script: |
      curl '$(sonar.BuildWrapperUrl)' --output build-wrapper.zip
      unzip build-wrapper.zip
    workingDirectory: $(buildDir)
    displayName: 'Download and unpack Sonar Build-Wrapper'

  - task: Cache@2
    displayName: 'Sonar Scanner Cache'
    inputs:
      key: 'SonarCache | $(sonar.ProjectKey) | $(Build.SourceBranchName) | $(cmake.ConfigurePreset) | "$(sonar.ScannerVersion)"'
      path: $(sonar.CacheDir)

  - task: SonarCloudPrepare@1
    displayName: 'Prepare Sonar Cloud Scanner'
    inputs:
      SonarCloud: $(sonar.CloudName)
      organization: $(sonar.Organization)
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: $(sonar.ProjectKey)
      cliProjectVersion: $(product.Version.Full)
      cliSources: $(sonar.Sources)
      extraProperties: |
        sonar.tests=$(sonar.Tests)
        sonar.cfamily.build-wrapper-output=$(buildDir)/BuildWrapperOutput
        sonar.cfamily.cache.path=$(sonar.CacheDir)
        sonar.cfamily.cache.enabled=true
        sonar.cfamily.threads=4
        sonar.testExecutionReportPaths=$(installDir)/Tests/Results/MethaneDataTypesTest.xml,$(installDir)/Tests/Results/MethaneDataEventsTest.xml,$(installDir)/Tests/Results/MethaneDataRangeSetTest.xml,$(installDir)/Tests/Results/MethanePlatformInputTest.xml,$(installDir)/Tests/Results/MethaneGraphicsTypesTest.xml,$(installDir)/Tests/Results/MethaneGraphicsCameraTest.xml,$(installDir)/Tests/Results/MethaneUserInterfaceTypesTest.xml
        sonar.coverageReportPaths=$(installDir)/Tests/Coverage/Report/SonarQube.xml

  - script: |
      $(buildDir)/$(sonar.BuildWrapperExe) --out-dir $(buildDir)/BuildWrapperOutput cmake --build --preset $(cmake.BuildPreset) --target install
    workingDirectory: $(Build.SourcesDirectory)
    continueOnError: true
    displayName: 'Build under Sonar Build-Wrapper with preset $(cmake.BuildPreset)'

  - ${{ each step in parameters.extraScanSteps }}:
    - ${{ step }}

  - task: reportgenerator@4
    displayName: 'Generate SonarCube report with code coverage'
    condition: ne(variables.coverageReports, '')
    inputs:
      reports: $(coverageReports)
      targetdir: '$(installDir)/Tests/Coverage/Report'
      reporttypes: 'SonarQube'
      title: 'Methane Tests Code Coverage for $(cmake.BuildPreset)'
      tag: '$(product.Version.Full)'

  - task: SonarCloudAnalyze@1
    displayName: 'Analyze built sources with Sonar Scanner'

  - task: SonarCloudPublish@1
    displayName: 'Publish results of analysis to Sonar Cloud'
    inputs:
      pollingTimeoutSec: '300'