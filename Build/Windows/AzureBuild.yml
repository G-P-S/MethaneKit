# Methane Kit CI configuration for Windows platform
# https://aka.ms/yaml

parameters:
  - name: runTests
    type: boolean
    default: true

steps:

  - task: CMake@1
    displayName: 'Check CMake version'
    inputs:
      cmakeArgs: '--version'

  - task: Cache@2
    displayName: 'Initialize Externals Cache'
    inputs:
      key: 'ExternalsCache | $(cmake.ConfigurePreset) | Externals/*.cmake'
      path: '$(cmake.ExternalsCacheDir)'

  - task: CMake@1
    displayName: 'Generate with configuration preset $(cmake.ConfigurePreset)'
    inputs:
      workingDirectory: $(Build.SourcesDirectory)
      cmakeArgs: '--preset $(cmake.ConfigurePreset) $(cmake.ConfigureFlags)'

  - task: CMake@1
    displayName: 'Build with preset $(cmake.BuildPreset)'
    inputs:
      workingDirectory: $(Build.SourcesDirectory)
      cmakeArgs: '--build --preset $(cmake.BuildPreset) --target install'

  - script: |
      setlocal enabledelayedexpansion
      echo Running unit-tests in directory "%cd%"
      for /r "." %%a in (*Test.exe) do (
        "%%~fa" -r junit -o "%%~fa_result.xml"
        echo  - %%~na - completed with !errorlevel! exit status
      )
      exit 0
    workingDirectory: '$(installDir)\Tests'
    enabled: ${{ parameters.runTests }}
    failOnStderr: false
    displayName: 'Run all unit-tests from install directory'

  - script: |
      copy README.md $(installDir)\README.md
      echo Methane Kit v.$(product.Version.Full), azure build number: $(Build.BuildNumber), git branch: $(Build.SourceBranchName), commit id: $(Build.SourceVersion) > $(installDir)\Build.txt
      echo   - Built with CMake configure preset $(cmake.ConfigurePreset) and build preset $(cmake.BuildPreset) >> $(installDir)\Build.txt
      echo   - Built on agent $(Agent.Name), $(Agent.OS), $(Agent.OSArchitecture): >> $(installDir)/Build.txt
      systeminfo >> $(installDir)\Build.txt
    workingDirectory: $(Build.SourcesDirectory)
    displayName: 'Copy ReadMe and write build information'

  - task: CopyFiles@2
    displayName: 'Copy install artifacts to staging directory'
    inputs:
      SourceFolder: $(installDir)
      Contents: '**\*'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishTestResults@2
    enabled: ${{ parameters.runTests }}
    continueOnError: true
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles:  '**\*_result.xml'
      searchFolder: '$(Build.ArtifactStagingDirectory)\Tests'
      mergeTestResults: true
      failTaskOnFailedTests: true
      testRunTitle: 'Methane Tests $(Agent.JobName)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish install artifacts'
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: MethaneKit_$(Agent.JobName)_v$(product.Version.Full)
